// <auto-generated />
using System;
using BHYT.API.Models.DbModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BHYT.API.Migrations
{
    [DbContext(typeof(BHYTDbContext))]
    partial class BHYTDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BHYT.API.Models.DbModels.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_locked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("last_failed_login")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("locked_until")
                        .HasColumnType("datetime2");

                    b.Property<int>("login_attempts")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.Benefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Benefits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Coverage for medical expenses",
                            Guid = new Guid("3dfc0b67-0246-471e-919a-aa9013819d3e"),
                            Name = "Health Insurance"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Coverage in the event of death",
                            Guid = new Guid("84cd0bf0-bbe6-4886-a1de-c899a520ac06"),
                            Name = "Life Insurance"
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.Compensation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Compensations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1000.5,
                            Date = new DateTime(2023, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5548),
                            EmployeeId = 1,
                            Guid = new Guid("708503fe-395a-4fcd-897a-889a537883ad"),
                            Note = "Bonus payment",
                            PolicyId = 1,
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            Amount = 750.25,
                            Date = new DateTime(2023, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5570),
                            EmployeeId = 2,
                            Guid = new Guid("553c70d6-3e42-400b-bad5-00c597952aa6"),
                            Note = "Incentive payment",
                            PolicyId = 2,
                            Status = true
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.CustomerPolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BenefitId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<double?>("DeductibleAmount")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("InsuranceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LatestUpdate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("PaymentOption")
                        .HasColumnType("bit");

                    b.Property<double?>("PremiumAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CustomerPolicies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BenefitId = 1,
                            Company = "ABC Insurance",
                            CoverageType = "Comprehensive",
                            CreatedDate = new DateTime(2023, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5594),
                            CustomerId = 1,
                            DeductibleAmount = 500.0,
                            Description = "Policy for car insurance",
                            EndDate = new DateTime(2024, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5595),
                            Guid = new Guid("cc5af0f2-61cc-488e-ac28-bf4a174e37cd"),
                            InsuranceId = 1,
                            LatestUpdate = new DateTime(2023, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5604),
                            PaymentOption = true,
                            PremiumAmount = 1000.5,
                            StartDate = new DateTime(2023, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5592),
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            BenefitId = 2,
                            Company = "XYZ Insurance",
                            CoverageType = "Third Party",
                            CreatedDate = new DateTime(2023, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5611),
                            CustomerId = 2,
                            DeductibleAmount = 1000.0,
                            Description = "Policy for home insurance",
                            EndDate = new DateTime(2024, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5612),
                            Guid = new Guid("cda8aca2-00e0-498f-b198-b787d87bb250"),
                            InsuranceId = 2,
                            LatestUpdate = new DateTime(2023, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5615),
                            PaymentOption = false,
                            PremiumAmount = 1500.75,
                            StartDate = new DateTime(2023, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5611),
                            Status = true
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.HealthHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnostic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HospitalNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InsuranceId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HealthHistories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Condition = "health condition",
                            CreatedDate = new DateTime(2023, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5638),
                            CustomerId = 1,
                            Detail = "Patient's health history detail",
                            Diagnostic = "Diagnosis of the patient's condition",
                            Guid = new Guid("996f6052-2b6d-4bb9-bd19-094c6bc7c744"),
                            HospitalNumber = "123456789",
                            InsuranceId = 1,
                            Note = "Additional notes about the health history"
                        },
                        new
                        {
                            Id = 2,
                            Condition = "health condition",
                            CreatedDate = new DateTime(2023, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5642),
                            CustomerId = 2,
                            Detail = "Patient's health history detail",
                            Diagnostic = "Diagnosis of the patient's condition",
                            Guid = new Guid("24f30cbc-4cd9-446f-8edc-5387145be5a2"),
                            HospitalNumber = "987654321",
                            InsuranceId = 2,
                            Note = "Additional notes about the health history"
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.Insurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("EndAge")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InsuranceTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("StartAge")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Insurances");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Provides coverage for a specific term or period of time",
                            EndAge = (byte)65,
                            Guid = new Guid("5d41c2d2-2ceb-4fc6-9f2b-68c64d4e71f7"),
                            InsuranceTypeId = "1",
                            Name = "Term Life Insurance",
                            StartAge = (byte)18
                        },
                        new
                        {
                            Id = 2,
                            Description = "Covers medical expenses for the entire family",
                            EndAge = (byte)99,
                            Guid = new Guid("8cafde3d-7f85-4c1c-9a15-54ae66d94ecf"),
                            InsuranceTypeId = "2",
                            Name = "Family Health Insurance",
                            StartAge = (byte)0
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.InsurancePayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InsurancePayments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1000.5,
                            CustomerId = 1,
                            Date = new DateTime(2023, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5690),
                            Guid = new Guid("1ed66998-197e-43d2-bc15-c1da1d0912fc"),
                            Note = "Payment for insurance policy",
                            PolicyId = 1,
                            Status = true,
                            Type = "Payment"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1500.75,
                            CustomerId = 2,
                            Date = new DateTime(2023, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5695),
                            Guid = new Guid("7c982732-b3ae-45c8-9d9e-a78607c8ce87"),
                            Note = "Payment for insurance policy",
                            PolicyId = 2,
                            Status = true,
                            Type = "Payment"
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.InsuranceRequired", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MedicalServiceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InsuranceRequireds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 500.5,
                            Date = new DateTime(2023, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5717),
                            Guid = new Guid("69c15c0f-be0f-44b0-87e9-93554e6418af"),
                            MedicalServiceName = "Medical Checkup",
                            Note = "Please schedule the appointment.",
                            PolicyId = 1,
                            ServiceDescription = "Required annual medical checkup",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1000.75,
                            Date = new DateTime(2023, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5722),
                            Guid = new Guid("81d90aa9-d98f-4fdd-9037-51efc1d48286"),
                            MedicalServiceName = "Diagnostic Tests",
                            Note = "Please complete the tests by the specified date.",
                            PolicyId = 2,
                            ServiceDescription = "Required diagnostic tests for policy renewal",
                            Status = 1
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.InsuranceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InsuranceTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Provides coverage for the risk of life",
                            Guid = new Guid("7d549713-a040-4349-a6ad-549ae4f22160"),
                            Name = "Life Insurance"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Covers medical expenses and healthcare services",
                            Guid = new Guid("79ae196e-6312-4c37-9487-056914b9eb79"),
                            Name = "Health Insurance"
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.PolicyApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PolicyApprovals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApprovalDate = new DateTime(2023, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5761),
                            EmployeeId = 1,
                            Guid = new Guid("e4255ce2-9271-4e2b-a7eb-9ca311cb99d2"),
                            PolicyId = 1,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            ApprovalDate = new DateTime(2023, 12, 28, 14, 48, 48, 100, DateTimeKind.Local).AddTicks(5765),
                            EmployeeId = 2,
                            Guid = new Guid("2ceb1ce5-3eda-4e43-ba4b-35093a150e4f"),
                            PolicyId = 2,
                            StatusId = 2
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccessTokenId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.ResetPasswordRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Requestdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Resetdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resetrequestcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResetPasswordRequests");
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Guid = new Guid("fb732651-e84b-4177-bd66-915111268843"),
                            Name = "employee"
                        },
                        new
                        {
                            Id = 2,
                            Guid = new Guid("559a29b1-93a1-4165-897b-3eaef5f3b1ae"),
                            Name = "customer"
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Appversion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("IsValid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionLastIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SessionLastRefresh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionToken")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Name")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Guid = new Guid("b19de646-7bf9-4175-bc6b-fbfb6edbdb9a"),
                            Name = true
                        },
                        new
                        {
                            Id = 2,
                            Guid = new Guid("e83efe99-bcfb-43b6-b3f4-102bb69ef483"),
                            Name = false
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("Sex")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
