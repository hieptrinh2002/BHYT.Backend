// <auto-generated />
using System;
using BHYT.API.Models.DbModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BHYT.API.Migrations
{
    [DbContext(typeof(BHYTDbContext))]
    [Migration("20231206103024_Insertdata")]
    partial class Insertdata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BHYT.API.Models.DbModels.Benefit", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<Guid?>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NAME");

                    b.HasKey("Id")
                        .HasName("BENEFIT_PK");

                    b.HasIndex(new[] { "Guid" }, "UQ__BENEFIT__15B69B8F92DB0273")
                        .IsUnique()
                        .HasFilter("[GUID] IS NOT NULL");

                    b.HasIndex(new[] { "Guid" }, "idx_GUID");

                    b.ToTable("BENEFIT", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Coverage for medical expenses",
                            Guid = new Guid("d78daed5-1780-4965-8ba0-5ca8596edfbf"),
                            Name = "Health Insurance"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Coverage in the event of death",
                            Guid = new Guid("f62ffd62-41a4-4324-be80-ed45ca4ee2ab"),
                            Name = "Life Insurance"
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.Compensation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("DATE");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EMPLOYEE_ID");

                    b.Property<Guid?>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NOTE");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int")
                        .HasColumnName("POLICY_ID");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("STATUS");

                    b.HasKey("Id")
                        .HasName("COMPENSATION_PK");

                    b.HasIndex(new[] { "Guid" }, "UQ__COMPENSA__15B69B8F37DC82A4")
                        .IsUnique()
                        .HasFilter("[GUID] IS NOT NULL");

                    b.HasIndex(new[] { "Guid" }, "idx_GUID");

                    b.ToTable("COMPENSATION", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1000.5,
                            Date = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1427),
                            EmployeeId = 1,
                            Guid = new Guid("36d1b847-6aab-4d0c-8699-fd696cea8a2a"),
                            Note = "Bonus payment",
                            PolicyId = 1,
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            Amount = 750.25,
                            Date = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1474),
                            EmployeeId = 2,
                            Guid = new Guid("d5821556-5a68-4ee4-aa7f-40b625e37b1d"),
                            Note = "Incentive payment",
                            PolicyId = 2,
                            Status = true
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.Customer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("Bank")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BANK");

                    b.Property<string>("BankNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("BANK_NUMBER");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("BIRTHDAY");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Fullname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FULLNAME");

                    b.Property<Guid?>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("PHONE");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("ROLE_ID");

                    b.Property<int?>("Sex")
                        .HasColumnType("int")
                        .HasColumnName("SEX");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("STATUS_ID");

                    b.Property<string>("Username")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id")
                        .HasName("CUSTOMER_PK");

                    b.HasIndex(new[] { "Guid" }, "UQ__CUSTOMER__15B69B8F12620E9E")
                        .IsUnique()
                        .HasFilter("[GUID] IS NOT NULL");

                    b.HasIndex(new[] { "Guid" }, "idx_GUID");

                    b.ToTable("CUSTOMER", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            Bank = "ABC Bank",
                            BankNumber = "1234567890",
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user1@example.com",
                            Fullname = "John Doe",
                            Guid = new Guid("4596f5ae-1ea1-4a97-8100-f32f42b1dd20"),
                            Password = "password1",
                            Phone = "1234567890",
                            RoleId = 1,
                            Sex = 1,
                            StatusId = 1,
                            Username = "user1"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St",
                            Bank = "XYZ Bank",
                            BankNumber = "0987654321",
                            Birthday = new DateTime(1995, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user2@example.com",
                            Fullname = "Jane Smith",
                            Guid = new Guid("552c5144-960a-4d1e-a676-9de26f3215d5"),
                            Password = "password2",
                            Phone = "9876543210",
                            RoleId = 2,
                            Sex = 0,
                            StatusId = 1,
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.CustomerPolicy", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("BenefitId")
                        .HasColumnType("int")
                        .HasColumnName("BENEFIT_ID");

                    b.Property<string>("Company")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("COMPANY");

                    b.Property<string>("CoverageType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("COVERAGE_TYPE");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CREATED_DATE");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CUSTOMER_ID");

                    b.Property<double?>("DeductibleAmount")
                        .HasColumnType("float")
                        .HasColumnName("DEDUCTIBLE_AMOUNT");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("END_DATE");

                    b.Property<Guid?>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("InsuranceId")
                        .HasColumnType("int")
                        .HasColumnName("INSURANCE_ID");

                    b.Property<DateTime?>("LatestUpdate")
                        .HasColumnType("date")
                        .HasColumnName("LATEST_UPDATE");

                    b.Property<bool?>("PaymentOption")
                        .HasColumnType("bit")
                        .HasColumnName("PAYMENT_OPTION");

                    b.Property<double?>("PremiumAmount")
                        .HasColumnType("float")
                        .HasColumnName("PREMIUM_AMOUNT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("START_DATE");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("STATUS");

                    b.HasKey("Id")
                        .HasName("CUSTOMER_POLICIES_PK");

                    b.HasIndex(new[] { "Guid" }, "UQ__CUSTOMER__15B69B8FBD3D10F9")
                        .IsUnique()
                        .HasFilter("[GUID] IS NOT NULL");

                    b.HasIndex(new[] { "Guid" }, "idx_GUID");

                    b.ToTable("CUSTOMER_POLICIES", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BenefitId = 1,
                            Company = "ABC Insurance",
                            CoverageType = "Comprehensive",
                            CreatedDate = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1524),
                            CustomerId = 1,
                            DeductibleAmount = 500.0,
                            Description = "Policy for car insurance",
                            EndDate = new DateTime(2024, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1526),
                            Guid = new Guid("4a5560fa-78c8-415f-b917-123ef9262254"),
                            InsuranceId = 1,
                            LatestUpdate = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1535),
                            PaymentOption = true,
                            PremiumAmount = 1000.5,
                            StartDate = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1524),
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            BenefitId = 2,
                            Company = "XYZ Insurance",
                            CoverageType = "Third Party",
                            CreatedDate = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1540),
                            CustomerId = 2,
                            DeductibleAmount = 1000.0,
                            Description = "Policy for home insurance",
                            EndDate = new DateTime(2024, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1540),
                            Guid = new Guid("6050d149-81f3-4bd2-b27e-b034e6d8bdc2"),
                            InsuranceId = 2,
                            LatestUpdate = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1542),
                            PaymentOption = false,
                            PremiumAmount = 1500.75,
                            StartDate = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1539),
                            Status = true
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.Employee", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ADDRESS");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("BIRTHDAY");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Fullname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FULLNAME");

                    b.Property<Guid?>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("PHONE");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("ROLE_ID");

                    b.Property<int?>("Sex")
                        .HasColumnType("int")
                        .HasColumnName("SEX");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("STATUS_ID");

                    b.Property<string>("Username")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id")
                        .HasName("EMPLOYEE_PK");

                    b.HasIndex(new[] { "Guid" }, "UQ__EMPLOYEE__15B69B8FBFD72589")
                        .IsUnique()
                        .HasFilter("[GUID] IS NOT NULL");

                    b.HasIndex(new[] { "Guid" }, "idx_GUID");

                    b.ToTable("EMPLOYEE", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            Birthday = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@example.com",
                            Fullname = "John Doe",
                            Guid = new Guid("c79e05c6-9055-47cf-b48f-15e7df8b5d34"),
                            Password = "password123",
                            Phone = "1234567890",
                            RoleId = 1,
                            Sex = 0,
                            StatusId = 1,
                            Username = "john_doe"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St",
                            Birthday = new DateTime(1995, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@example.com",
                            Fullname = "Jane Smith",
                            Guid = new Guid("c3b17a21-9086-492f-a709-1b2e7beab17a"),
                            Password = "password456",
                            Phone = "9876543210",
                            RoleId = 2,
                            Sex = 1,
                            StatusId = 1,
                            Username = "jane_smith"
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.HealthHistory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Condition")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CONDITION");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CREATED_DATE");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CUSTOMER_ID");

                    b.Property<string>("Detail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DETAIL");

                    b.Property<string>("Diagnostic")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DIAGNOSTIC");

                    b.Property<Guid?>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("HospitalNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("HOSPITAL_NUMBER");

                    b.Property<int?>("InsuranceId")
                        .HasColumnType("int")
                        .HasColumnName("INSURANCE_ID");

                    b.Property<string>("Note")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOTE");

                    b.HasKey("Id")
                        .HasName("HEALTH_HISTORY_PK");

                    b.HasIndex(new[] { "Guid" }, "UQ__HEALTH_H__15B69B8FAD12E3E0")
                        .IsUnique()
                        .HasFilter("[GUID] IS NOT NULL");

                    b.HasIndex(new[] { "Guid" }, "idx_GUID");

                    b.ToTable("HEALTH_HISTORY", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Condition = "health condition",
                            CreatedDate = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1591),
                            CustomerId = 1,
                            Detail = "Patient's health history detail",
                            Diagnostic = "Diagnosis of the patient's condition",
                            Guid = new Guid("6a256382-a087-444a-87eb-893af4570f9b"),
                            HospitalNumber = "123456789",
                            InsuranceId = 1,
                            Note = "Additional notes about the health history"
                        },
                        new
                        {
                            Id = 2,
                            Condition = "health condition",
                            CreatedDate = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1596),
                            CustomerId = 2,
                            Detail = "Patient's health history detail",
                            Diagnostic = "Diagnosis of the patient's condition",
                            Guid = new Guid("1cb37c52-ede5-4b83-a5a3-1dcdd96e3b85"),
                            HospitalNumber = "987654321",
                            InsuranceId = 2,
                            Note = "Additional notes about the health history"
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.Insurance", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<byte?>("EndAge")
                        .HasColumnType("tinyint")
                        .HasColumnName("END_AGE");

                    b.Property<Guid?>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("InsuranceTypeId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("INSURANCE_TYPE_ID");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NAME");

                    b.Property<byte?>("StartAge")
                        .HasColumnType("tinyint")
                        .HasColumnName("START_AGE");

                    b.HasKey("Id")
                        .HasName("INSURANCE_PK");

                    b.HasIndex(new[] { "Guid" }, "UQ__INSURANC__15B69B8FDF297966")
                        .IsUnique()
                        .HasFilter("[GUID] IS NOT NULL");

                    b.HasIndex(new[] { "Guid" }, "idx_GUID");

                    b.ToTable("INSURANCE", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Provides coverage for a specific term or period of time",
                            EndAge = (byte)65,
                            Guid = new Guid("61f7819f-7ca6-450e-bd40-9bca05b1d4ca"),
                            InsuranceTypeId = "1",
                            Name = "Term Life Insurance",
                            StartAge = (byte)18
                        },
                        new
                        {
                            Id = 2,
                            Description = "Covers medical expenses for the entire family",
                            EndAge = (byte)99,
                            Guid = new Guid("879e5a79-b68e-45c5-923b-3f2985503728"),
                            InsuranceTypeId = "2",
                            Name = "Family Health Insurance",
                            StartAge = (byte)0
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.InsurancePayment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CUSTOMER_ID");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("DATE");

                    b.Property<Guid?>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NOTE");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int")
                        .HasColumnName("POLICY_ID");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("STATUS");

                    b.Property<string>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TYPE");

                    b.HasKey("Id")
                        .HasName("INSURANCE_PAYMENT_PK");

                    b.HasIndex(new[] { "Guid" }, "UQ__INSURANC__15B69B8F6483C5CF")
                        .IsUnique()
                        .HasFilter("[GUID] IS NOT NULL");

                    b.HasIndex(new[] { "Guid" }, "idx_GUID");

                    b.ToTable("INSURANCE_PAYMENT", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1000.5,
                            CustomerId = 1,
                            Date = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1637),
                            Guid = new Guid("4040b994-b304-42b9-b8b2-1f43931aa1a3"),
                            Note = "Payment for insurance policy",
                            PolicyId = 1,
                            Status = true,
                            Type = "Payment"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1500.75,
                            CustomerId = 2,
                            Date = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1643),
                            Guid = new Guid("09357e35-951b-4d5e-affe-d2adf4255bd4"),
                            Note = "Payment for insurance policy",
                            PolicyId = 2,
                            Status = true,
                            Type = "Payment"
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.InsuranceRequired", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("AMOUNT");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("DATE");

                    b.Property<Guid?>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("MedicalServiceName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("MEDICAL_SERVICE_NAME");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NOTE");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int")
                        .HasColumnName("POLICY_ID");

                    b.Property<string>("ServiceDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SERVICE_DESCRIPTION");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.HasKey("Id")
                        .HasName("INSURANCE_REQUIRED_PK");

                    b.HasIndex(new[] { "Guid" }, "UQ__INSURANC__15B69B8F061E3A3B")
                        .IsUnique()
                        .HasFilter("[GUID] IS NOT NULL");

                    b.HasIndex(new[] { "Guid" }, "idx_GUID");

                    b.ToTable("INSURANCE_REQUIRED", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 500.5,
                            Date = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1659),
                            Guid = new Guid("bbef834b-db83-4dd9-bc8b-b50ceb8ab353"),
                            MedicalServiceName = "Medical Checkup",
                            Note = "Please schedule the appointment.",
                            PolicyId = 1,
                            ServiceDescription = "Required annual medical checkup",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1000.75,
                            Date = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1662),
                            Guid = new Guid("59f60b72-2677-4beb-97bf-59c667a3b608"),
                            MedicalServiceName = "Diagnostic Tests",
                            Note = "Please complete the tests by the specified date.",
                            PolicyId = 2,
                            ServiceDescription = "Required diagnostic tests for policy renewal",
                            Status = 1
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.InsuranceType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<Guid?>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NAME");

                    b.HasKey("Id")
                        .HasName("INSURANCE_TYPE_PK");

                    b.HasIndex(new[] { "Guid" }, "UQ__INSURANC__15B69B8F8ABB27D4")
                        .IsUnique()
                        .HasFilter("[GUID] IS NOT NULL");

                    b.HasIndex(new[] { "Guid" }, "idx_GUID");

                    b.ToTable("INSURANCE_TYPE", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Provides coverage for the risk of life",
                            Guid = new Guid("4a65ea10-a7f4-4d6c-a346-f3cb4c07f48c"),
                            Name = "Life Insurance"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Covers medical expenses and healthcare services",
                            Guid = new Guid("95967557-5290-4cdd-9322-f874cf936b0d"),
                            Name = "Health Insurance"
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.PolicyApproval", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("date")
                        .HasColumnName("APPROVAL_DATE");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EMPLOYEE_ID");

                    b.Property<Guid?>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int")
                        .HasColumnName("POLICY_ID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("STATUS_ID");

                    b.HasKey("Id")
                        .HasName("POLICY_APPROVAL_PK");

                    b.HasIndex(new[] { "Guid" }, "UQ__POLICY_A__15B69B8FFD1FBDBA")
                        .IsUnique()
                        .HasFilter("[GUID] IS NOT NULL");

                    b.HasIndex(new[] { "Guid" }, "idx_GUID");

                    b.ToTable("POLICY_APPROVAL", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApprovalDate = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1692),
                            EmployeeId = 1,
                            Guid = new Guid("eeec7bfa-eb5e-40ae-8180-9add7cb2a3a7"),
                            PolicyId = 1,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            ApprovalDate = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1694),
                            EmployeeId = 2,
                            Guid = new Guid("253a199a-06f4-4f91-b35c-909b8855a941"),
                            PolicyId = 2,
                            StatusId = 2
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.ResetPasswordRequest", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Accountid")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ACCOUNTID");

                    b.Property<Guid?>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("Requestdate")
                        .HasColumnType("datetime")
                        .HasColumnName("REQUESTDATE");

                    b.Property<DateTime?>("Resetdate")
                        .HasColumnType("datetime")
                        .HasColumnName("RESETDATE");

                    b.Property<string>("Resetrequestcode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RESETREQUESTCODE");

                    b.HasKey("Id")
                        .HasName("RESET_PASSWORD_REQUEST_PK");

                    b.HasIndex(new[] { "Guid" }, "UQ__RESET_PA__15B69B8F0CE555AB")
                        .IsUnique()
                        .HasFilter("[GUID] IS NOT NULL");

                    b.HasIndex(new[] { "Guid" }, "idx_GUID");

                    b.ToTable("RESET_PASSWORD_REQUEST", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Accountid = "user1@example.com",
                            Guid = new Guid("ac27666b-f749-4d9e-b351-731abc735325"),
                            Requestdate = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1713),
                            Resetrequestcode = "ABC123"
                        },
                        new
                        {
                            Id = 2,
                            Accountid = "user2@example.com",
                            Guid = new Guid("8429c658-ad20-430a-a007-7fa1c64abf05"),
                            Requestdate = new DateTime(2023, 12, 6, 17, 30, 24, 695, DateTimeKind.Local).AddTicks(1716),
                            Resetrequestcode = "XYZ789"
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.Role", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<Guid?>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NAME");

                    b.HasKey("Id")
                        .HasName("ROLE_PK");

                    b.HasIndex(new[] { "Guid" }, "UQ__ROLE__15B69B8FAB73D4EE")
                        .IsUnique()
                        .HasFilter("[GUID] IS NOT NULL");

                    b.HasIndex(new[] { "Guid" }, "idx_GUID");

                    b.ToTable("ROLE", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Guid = new Guid("ddba4218-b9f4-4c6f-9e96-71d1e612a409"),
                            Name = "employee"
                        },
                        new
                        {
                            Id = 2,
                            Guid = new Guid("a4352dfa-11ae-431e-adb8-b859ff206390"),
                            Name = "customer"
                        });
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.Session", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("AccountId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ACCOUNT_ID");

                    b.Property<string>("Appversion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("APPVERSION");

                    b.Property<Guid?>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("IsValid")
                        .HasColumnType("int")
                        .HasColumnName("IS_VALID");

                    b.Property<DateTime?>("LOginDate")
                        .HasColumnType("date")
                        .HasColumnName("lOGIN_DATE");

                    b.Property<string>("ServiceDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SERVICE_DESCRIPTION");

                    b.Property<string>("SessionLastIp")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SESSION_LAST_IP");

                    b.Property<DateTime?>("SessionLastRefresh")
                        .HasColumnType("date")
                        .HasColumnName("SESSION_LAST_REFRESH");

                    b.Property<string>("SessionToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SESSION_TOKEN");

                    b.HasKey("Id")
                        .HasName("SESSION_PK");

                    b.HasIndex(new[] { "Guid" }, "UQ__SESSION__15B69B8FE2E4485C")
                        .IsUnique()
                        .HasFilter("[GUID] IS NOT NULL");

                    b.HasIndex(new[] { "Guid" }, "idx_GUID");

                    b.ToTable("SESSION", (string)null);
                });

            modelBuilder.Entity("BHYT.API.Models.DbModels.Status", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<Guid?>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Name")
                        .HasColumnType("bit")
                        .HasColumnName("NAME");

                    b.HasKey("Id")
                        .HasName("STATUS_PK");

                    b.HasIndex(new[] { "Guid" }, "UQ__STATUS__15B69B8F10330BE7")
                        .IsUnique()
                        .HasFilter("[GUID] IS NOT NULL");

                    b.HasIndex(new[] { "Guid" }, "idx_GUID");

                    b.ToTable("STATUS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Guid = new Guid("6315cd4d-0cc1-4e9d-80bd-08b7cd680d53"),
                            Name = true
                        },
                        new
                        {
                            Id = 2,
                            Guid = new Guid("a4e7da11-1b42-4aa8-8f21-99927bbc2231"),
                            Name = false
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
